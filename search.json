[{"path":"https://matanhakim.github.io/il.cbs.muni/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2024 il.cbs.muni authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matan Hakim. Author, maintainer, copyright holder.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Hakim M (2024). il.cbs.muni: Utility functions Work Israeli Central Bureau Statistics Municipal Data. R package version 0.0.0.9000,  https://matanhakim.github.io/il.cbs.muni/, https://github.com/matanhakim/il.cbs.muni.","code":"@Manual{,   title = {il.cbs.muni: Utility functions to Work with Israeli Central Bureau of Statistics Municipal Data},   author = {Matan Hakim},   year = {2024},   note = {R package version 0.0.0.9000,  https://matanhakim.github.io/il.cbs.muni/},   url = {https://github.com/matanhakim/il.cbs.muni}, }"},{"path":"https://matanhakim.github.io/il.cbs.muni/index.html","id":"ilcbsmuni","dir":"","previous_headings":"","what":"Utility functions to Work with Israeli Central Bureau of Statistics Municipal Data","title":"Utility functions to Work with Israeli Central Bureau of Statistics Municipal Data","text":"il.cbs.muni analyst oriented utility package handle different quirks Israeli CBS municipal data, harmonize id’s bring together data points different years.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Utility functions to Work with Israeli Central Bureau of Statistics Municipal Data","text":"can install development version il.cbs.muni GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"matanhakim/il.cbs.muni\")"},{"path":"https://matanhakim.github.io/il.cbs.muni/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"Utility functions to Work with Israeli Central Bureau of Statistics Municipal Data","text":"Let’s say like work 2021 yishuvim data (‘yishuvim’ = points residence) Israeli CBS. read first two columns: can see, id column two problems: ’s numeric vector. problematic convention id throughout il.verse id’s characters. yishuv id different length, ranging 1-4. problematic since difference 67 0067, creates potential clashes cities regional councils working municipal data. example, 31 yishuv id Ofakim, also municipal id Nahal Sorek regional council. Therefore, convention use 4-character-long id every yishuv. using pad_yishuv_id() function, can fix problem: Now every yishuv id string exactly 4 characters long. can verify : solves common problem working yishuvim data.","code":"library(il.cbs.muni) library(readxl) suppressMessages(library(dplyr))  # This is the specific path to the file in this package, but you can store it # anywhere you want. df_yishuvim <- read_excel(\"inst/extdata/bycode2021.xlsx\", range = cell_cols(\"A:B\")) |>    rename(yishuv_name = 1, yishuv_id = 2) df_yishuvim #> # A tibble: 1,483 × 2 #>    yishuv_name         yishuv_id #>    <chr>                   <dbl> #>  1 אבו ג'ווייעד (שבט)        967 #>  2 אבו גוש                   472 #>  3 אבו סנאן                  473 #>  4 אבו סריחאן (שבט)          935 #>  5 אבו עבדון (שבט)           958 #>  6 אבו עמאר (שבט)           1042 #>  7 אבו עמרה (שבט)            932 #>  8 אבו קורינאת (יישוב)      1342 #>  9 אבו קורינאת (שבט)         968 #> 10 אבו רובייעה (שבט)         966 #> # ℹ 1,473 more rows df_yishuvim <- df_yishuvim |>    mutate(yishuv_id = pad_yishuv_id(yishuv_id)) df_yishuvim #> # A tibble: 1,483 × 2 #>    yishuv_name         yishuv_id #>    <chr>               <chr>     #>  1 אבו ג'ווייעד (שבט)  0967      #>  2 אבו גוש             0472      #>  3 אבו סנאן            0473      #>  4 אבו סריחאן (שבט)    0935      #>  5 אבו עבדון (שבט)     0958      #>  6 אבו עמאר (שבט)      1042      #>  7 אבו עמרה (שבט)      0932      #>  8 אבו קורינאת (יישוב) 1342      #>  9 אבו קורינאת (שבט)   0968      #> 10 אבו רובייעה (שבט)   0966      #> # ℹ 1,473 more rows df_yishuvim$yishuv_id |>    stringr::str_length() |>    range() #> [1] 4 4"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/clean_name.html","id":null,"dir":"Reference","previous_headings":"","what":"Clean a string from characters unwanted in (mostly) yishuv names — clean_name","title":"Clean a string from characters unwanted in (mostly) yishuv names — clean_name","text":"Clean string characters unwanted (mostly) yishuv names","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/clean_name.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clean a string from characters unwanted in (mostly) yishuv names — clean_name","text":"","code":"clean_name(name)"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/clean_name.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clean a string from characters unwanted in (mostly) yishuv names — clean_name","text":"name character vector","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/clean_name.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clean a string from characters unwanted in (mostly) yishuv names — clean_name","text":"character vector without leading trailing white space, characters letters digits, excluding following: '-()\"","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/clean_name.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clean a string from characters unwanted in (mostly) yishuv names — clean_name","text":"","code":"clean_name(\"test-123_test*456\") #> [1] \"test-123test456\" clean_name(\"אילון תבור*\") #> [1] \"אילון תבור\" clean_name(\"ג'סר א-זרקא\") #> [1] \"ג'סר א-זרקא\""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/combine_cbs_muni.html","id":null,"dir":"Reference","previous_headings":"","what":"Combine municipalities data frames from different sheets — combine_cbs_muni","title":"Combine municipalities data frames from different sheets — combine_cbs_muni","text":"function wrapper around read_cbs_muni() help combining data cities, local councils regional councils. 2015 earlier, Israeli CBS publishes municipal data different sheets formats cities local councils, regional councils. function enables user combine two data frames selected columns. user take care specific match specific columns.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/combine_cbs_muni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combine municipalities data frames from different sheets — combine_cbs_muni","text":"","code":"combine_cbs_muni(   path,   year,   cols_city,   cols_rc,   data_domain = c(\"physical\", \"budget\"),   col_names_from = c(\"city_lc\", \"rc\") )"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/combine_cbs_muni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Combine municipalities data frames from different sheets — combine_cbs_muni","text":"path character vector length 1, denoting local file path municipal data file. full list available files CBS relevant CBS page. year numeric vector length 1 denoting year data file pointed path . Currently supporting 2003-2015, since 2003 data structure different, 2015 file already combined. cols_city <tidy-select> Columns keep cities local councils sheet. cols_rc <tidy-select> Columns keep regional councils sheet. order desired columns cols_city, since columns matched order. data_domain character vector length 1, one c(\"physical\", \"budget\"). Every Excel municipal data file different data domains, notably physical population data, budget data. col_names_from character vector length 1, one c(\"city_lc\", \"rc\"). Denotes column names kept - cities local councils sheet, regional councils sheet.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/combine_cbs_muni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Combine municipalities data frames from different sheets — combine_cbs_muni","text":"tibble municipal data specific year, columns cols_city cols_rc binded rows matched order columns. Every row municipality every column different variable municipality year. advised columns type character, need parse data types . Column names merged relevant headers, single whitespaces kept. Rows 90% empty cells (usually rows non-data notes) removed.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/combine_cbs_muni.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Combine municipalities data frames from different sheets — combine_cbs_muni","text":"","code":"df_1 <- combine_cbs_muni(   system.file(\"extdata\", \"2009.xls\", package = \"il.cbs.muni\"),   year = 2009,   cols_city = c(1:7, 11),   cols_rc = c(1:7, 25) ) #> Error in read_cbs_muni(path = path, year = {    {        year    }}, muni_type = \"city_lc\", data_domain = {    {        data_domain    }}, cols = cols_city): object 'df_cbs_muni_params' not found  df_1 |>   dplyr::glimpse() #> Error in eval(expr, envir, enclos): object 'df_1' not found  df_2 <- combine_cbs_muni(   system.file(\"extdata\", \"2009.xls\", package = \"il.cbs.muni\"),   year = 2009,   cols_city = c(1:12),   cols_rc = c(1:12),   data_domain = \"budget\",   col_names_from = \"rc\" ) #> Error in read_cbs_muni(path = path, year = {    {        year    }}, muni_type = \"city_lc\", data_domain = {    {        data_domain    }}, cols = cols_city): object 'df_cbs_muni_params' not found  df_2 |>   dplyr::glimpse() #> Error in eval(expr, envir, enclos): object 'df_2' not found"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/modify_muni_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Modify a municipal id depending on the municipal status and yishuv id — modify_muni_id","title":"Modify a municipal id depending on the municipal status and yishuv id — modify_muni_id","text":"context working cbs municipal yishuvim data, difference treatment yishuv municipality. cases cities local councils yishuv id municipality id . case regional councils, municipality id regional council, every yishuv within municipality different yishuv id. Israeli CBS uses concept \"municipal status\" differntiate two. municipal status \"0\" represents city, \"99\" represents local council. Every 2-digit number municipal id regional council. function modifies municipal status based yishuv_id. returns correct municipal id accounting \"0\" \"99\" values.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/modify_muni_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Modify a municipal id depending on the municipal status and yishuv id — modify_muni_id","text":"","code":"modify_muni_id(muni_id, yishuv_id)"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/modify_muni_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Modify a municipal id depending on the municipal status and yishuv id — modify_muni_id","text":"muni_id character numeric vector indicating municipal status, \"0\" \"99\" represents city local council, every two-digit number character represents regional council. yishuv_id character numeric vector representing yishuv id. 4 digits long according il.verse conventions.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/modify_muni_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Modify a municipal id depending on the municipal status and yishuv id — modify_muni_id","text":"character vector 4 digits municipal id cities local councils 2 digits municipal id regional councils.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/modify_muni_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Modify a municipal id depending on the municipal status and yishuv id — modify_muni_id","text":"","code":"muni_id <- c(0, 99, 1, 2) yishuv_id <- c(\"0001\", \"1000\", \"1234\", \"1567\") modify_muni_id(muni_id, yishuv_id) #> [1] \"0001\" \"1000\" \"01\"   \"02\""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/pad_yishuv_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Pad a yishuv id to a 4-digit character vector — pad_yishuv_id","title":"Pad a yishuv id to a 4-digit character vector — pad_yishuv_id","text":"Pad yishuv id 4-digit character vector","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/pad_yishuv_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pad a yishuv id to a 4-digit character vector — pad_yishuv_id","text":"","code":"pad_yishuv_id(yishuv_id)"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/pad_yishuv_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Pad a yishuv id to a 4-digit character vector — pad_yishuv_id","text":"yishuv_id character vector containing characters numbers, element longer 4 characters digits.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/pad_yishuv_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Pad a yishuv id to a 4-digit character vector — pad_yishuv_id","text":"character numeric vector, element 4 characters long, containing numbers left-padded 0's.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/pad_yishuv_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Pad a yishuv id to a 4-digit character vector — pad_yishuv_id","text":"","code":"x <- c(1, \"23\", \"4000\", 5600) pad_yishuv_id(x) #> [1] \"0001\" \"0023\" \"4000\" \"5600\""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_muni.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a municipal data file to a tibble — read_cbs_muni","title":"Read a municipal data file to a tibble — read_cbs_muni","text":"function wrapper around readxl::read_excel(), reading specific municipal data file specific year specific data domain. added value use row_to_names_fill() pre-defined parameters every year specific quirks Excel headers. advanced users, full set options available il.cbs.muni:::df_cbs_muni_params.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_muni.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a municipal data file to a tibble — read_cbs_muni","text":"","code":"read_cbs_muni(   path,   year,   muni_type = c(\"all\", \"city_lc\", \"rc\"),   data_domain = c(\"physical\", \"budget\", \"summary\", \"labor_force_survey\", \"social_survey\"),   cols = NULL )"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_muni.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a municipal data file to a tibble — read_cbs_muni","text":"path character vector length 1, denoting local file path municipal data file. full list available files CBS relevant CBS page. year numeric vector length 1 denoting year data file pointed path . Currently supporting 2003 later, since 2003 data structure different. muni_type character vector length 1, one c(\"\", \"city_lc\", \"rc\"). Since 2016, municipal types bundled together sheets, 2016 different sheets cities local councils (\"city_lc\") regional councils (\"rc\"). parameter chooses sheet read. data_domain character vector length 1, one c(\"physical\", \"budget\", \"summary\", \"labor_force_survey\", \"social_survey\"). Every Excel municipal data file different data domains, notably physical population data, budget data. cols <tidy-select> Columns keep. default NULL keeps columns.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_muni.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a municipal data file to a tibble — read_cbs_muni","text":"tibble municipal data specific year, every row municipality every column different variable municipality year. advised columns type character, need parse data types . Column names merged relevant headers, single whitespaces kept. Rows 90% empty cells (usually rows non-data notes) removed.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_muni.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a municipal data file to a tibble — read_cbs_muni","text":"","code":"df <- read_cbs_muni(   system.file(\"extdata\", \"p_libud_2021.xlsx\", package = \"il.cbs.muni\"),   year = 2021,   data_domain = \"physical\" ) #> Error in read_cbs_muni(system.file(\"extdata\", \"p_libud_2021.xlsx\", package = \"il.cbs.muni\"),     year = 2021, data_domain = \"physical\"): object 'df_cbs_muni_params' not found  df |>   dplyr::select(1:15) |>   dplyr::glimpse() #> Error in UseMethod(\"select\"): no applicable method for 'select' applied to an object of class \"function\""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_yishuv.html","id":null,"dir":"Reference","previous_headings":"","what":"Read a yishuvim data file to a tibble — read_cbs_yishuv","title":"Read a yishuvim data file to a tibble — read_cbs_yishuv","text":"function wrapper around readxl::read_excel(), reading specific yishuvim data file part . yishuv, point residence, geographically defined place people live. yishuvim municipalities, case cities local councils, . yishuvim part municipalities regional councils. Also, yishuvim part municipality, like Bedouin places southern Israel, industry areas, Mikveh Israel, .","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_yishuv.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read a yishuvim data file to a tibble — read_cbs_yishuv","text":"","code":"read_cbs_yishuv(path, cols = NULL)"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_yishuv.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read a yishuvim data file to a tibble — read_cbs_yishuv","text":"path character vector length 1, denoting local file path yishuvim data file. full list available files CBS relevant CBS page. cols <tidy-select> Columns keep. default NULL keeps columns.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_yishuv.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read a yishuvim data file to a tibble — read_cbs_yishuv","text":"tibble yishuvim data specific year, every row yishuv every column different variable yishuv year. advised columns type character, need parse data types . Column names cleaned single whitespaces kept.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_cbs_yishuv.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read a yishuvim data file to a tibble — read_cbs_yishuv","text":"","code":"library(dplyr) #>  #> Attaching package: ‘dplyr’ #> The following objects are masked from ‘package:stats’: #>  #>     filter, lag #> The following objects are masked from ‘package:base’: #>  #>     intersect, setdiff, setequal, union read_cbs_yishuv(system.file(\"extdata\", \"bycode2021.xlsx\", package = \"il.cbs.muni\")) |>   dplyr::glimpse() #> Rows: 1,483 #> Columns: 26 #> $ `שם יישוב`              <chr> \"אבו ג'ווייעד (שבט)\", \"אבו גוש\", \"אבו סנאן\", \"… #> $ `סמל יישוב`             <chr> \"967\", \"472\", \"473\", \"935\", \"958\", \"1042\", \"93… #> $ תעתיק                   <chr> \"ABU JUWEI'ID\", \"ABU GHOSH\", \"ABU SINAN\", \"ABU… #> $ `סמל מחוז`              <chr> \"6\", \"1\", \"2\", \"6\", \"6\", \"6\", \"6\", \"6\", \"6\", \"… #> $ `שם מחוז`               <chr> \"הדרום\", \"ירושלים\", \"הצפון\", \"הדרום\", \"הדרום\",… #> $ `סמל נפה`               <chr> \"62\", \"11\", \"24\", \"62\", \"62\", \"62\", \"62\", \"62\"… #> $ `שם נפה`                <chr> \"באר שבע\", \"ירושלים\", \"עכו\", \"באר שבע\", \"באר ש… #> $ `אזור טבעי`             <chr> \"623\", \"111\", \"245\", \"623\", \"623\", \"623\", \"623… #> $ `סמל מעמד מונציפאלי`    <chr> NA, \"99\", \"99\", NA, NA, NA, NA, \"68\", NA, NA, … #> $ `שם מעמד מונציפאלי`     <chr> \"חסר מעמד מוניציפלי\", \"מועצה מקומית\", \"מועצה מ… #> $ `שיוך מטרופוליני`       <chr> NA, \"444\", NA, NA, NA, NA, NA, NA, NA, NA, NA,… #> $ `דת יישוב`              <chr> \"3\", \"2\", \"2\", \"3\", \"3\", \"3\", \"3\", \"2\", \"3\", \"… #> $ `סך הכל אוכלוסייה 2021` <chr> NA, \"7881\", \"14455\", NA, NA, NA, NA, \"2081\", N… #> $ `יהודים ואחרים`         <chr> NA, \"83\", \"31\", NA, NA, NA, NA, \"0\", NA, NA, N… #> $ `מזה: יהודים`           <chr> NA, \"64\", \"14\", NA, NA, NA, NA, \"0\", NA, NA, N… #> $ ערבים                   <chr> NA, \"7798\", \"14424\", NA, NA, NA, NA, \"2081\", N… #> $ `שנת ייסוד`             <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ `צורת יישוב שוטפת`      <chr> \"460\", \"280\", \"270\", \"460\", \"460\", \"460\", \"460… #> $ `השתייכות ארגונית`      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA… #> $ קואורדינטות             <chr> \"2040057100\", \"2105263481\", \"2161876289\", \"186… #> $ `גובה ממוצע`            <chr> NA, \"686\", \"71\", NA, NA, NA, NA, \"449\", NA, NA… #> $ `ועדת תכנון`            <chr> \"699\", \"152\", \"252\", \"699\", \"699\", \"699\", \"699… #> $ `תחנת משטרה`            <chr> NA, \"10002475\", \"15002143\", NA, NA, NA, NA, \"1… #> $ שנה                     <chr> \"2021\", \"2021\", \"2021\", \"2021\", \"2021\", \"2021\"… #> $ `שם יישוב באנגלית`      <chr> \"Abu Juway'ad\", \"Abu Ghosh\", \"Abu Sinan\", \"Abu… #> $ `אשכול רשויות מקומיות`  <chr> NA, NA, NA, NA, NA, NA, NA, \"610\", NA, NA, NA,…  read_cbs_yishuv(   system.file(\"extdata\", \"bycode2021.xlsx\", package = \"il.cbs.muni\"),   cols = c(1, 2, 5, 13) ) |>   mutate(across(2, pad_yishuv_id)) |>   glimpse() #> Rows: 1,483 #> Columns: 4 #> $ `שם יישוב`              <chr> \"אבו ג'ווייעד (שבט)\", \"אבו גוש\", \"אבו סנאן\", \"… #> $ `סמל יישוב`             <chr> \"0967\", \"0472\", \"0473\", \"0935\", \"0958\", \"1042\"… #> $ `שם מחוז`               <chr> \"הדרום\", \"ירושלים\", \"הצפון\", \"הדרום\", \"הדרום\",… #> $ `סך הכל אוכלוסייה 2021` <chr> NA, \"7881\", \"14455\", NA, NA, NA, NA, \"2081\", N…"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_muni_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Read municipalities id's and names — read_muni_id","title":"Read municipalities id's and names — read_muni_id","text":"Israeli municipalities different id's sometimes even different names across different government organizations. function allows read different municipality id's names , interchanging different specifications easier.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_muni_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read municipalities id's and names — read_muni_id","text":"","code":"read_muni_id(id_types = c(\"muni\", \"edu\", \"tax\"), include_names = FALSE)"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_muni_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read municipalities id's and names — read_muni_id","text":"id_types character vector length 1 3, containing least one (two, ) possible values. id's (possibly names) municipalities kept selected sources: \"muni\" CBS id's (cleaned) names. \"edu\" Ministry Education municipal symbol (\"Semel Reshut\" Hebrew) \"tax\" Israel Tax Authority municipal id (also known \"H.P. number\") include_names logical vector length 1, denoting names municipalites (id_types chosen) included. aware munipilati names might differ different agencies.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_muni_id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read municipalities id's and names — read_muni_id","text":"tibble, every row municipality columns include id's (possibly names) municipalities chosen agencies.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/read_muni_id.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Read municipalities id's and names — read_muni_id","text":"","code":"read_muni_id() |>   dplyr::glimpse() #> Rows: 255 #> Columns: 3 #> $ muni_id <chr> \"0472\", \"0473\", \"0182\", \"2710\", \"0031\", \"2400\", \"1020\", \"3760\"… #> $ edu_id  <chr> \"4721\", \"4739\", \"1826\", \"27102\", \"315\", \"24000\", \"10207\", \"376… #> $ tax_id  <chr> \"500204722\", \"500204730\", \"500201827\", \"500227103\", \"500200316…  read_muni_id(id_types = c(\"muni\", \"edu\"), include_names = TRUE) |>   dplyr::glimpse() #> Rows: 255 #> Columns: 4 #> $ muni_id   <chr> \"0472\", \"0473\", \"0182\", \"2710\", \"0031\", \"2400\", \"1020\", \"376… #> $ muni_name <chr> \"אבו גוש\", \"אבו סנאן\", \"אבן יהודה\", \"אום אל-פחם\", \"אופקים\", … #> $ edu_id    <chr> \"4721\", \"4739\", \"1826\", \"27102\", \"315\", \"24000\", \"10207\", \"3… #> $ edu_name  <chr> \"אבו גוש\", \"אבו סנאן\", \"אבן יהודה\", \"אום אל-פחם\", \"אופקים\", …"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/row_to_names_fill.html","id":null,"dir":"Reference","previous_headings":"","what":"Elevate rows to be the column names of a data.frame and fill row-wise if needed — row_to_names_fill","title":"Elevate rows to be the column names of a data.frame and fill row-wise if needed — row_to_names_fill","text":"Casts data rows column names data frame, option fill missing values row-wise. utility helpful case merged cells Microsoft Excel, merged range data first (unmerged) cell. function similar janitor::row_to_names(), exception fill utility.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/row_to_names_fill.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Elevate rows to be the column names of a data.frame and fill row-wise if needed — row_to_names_fill","text":"","code":"row_to_names_fill(   data,   row_number,   fill_missing = TRUE,   remove_row = TRUE,   remove_rows_above = TRUE,   sep = \"_\" )"},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/row_to_names_fill.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Elevate rows to be the column names of a data.frame and fill row-wise if needed — row_to_names_fill","text":"data data frame. row_number numeric vector row indices data containing variable names. Allows multiple rows input numeric vector. multiple rows, values column pasted sep argument separator. NA's ignored. fill_missing logical vector length 1 length length(row_number). Every value vector denotes matching row data[row_number, ] row fill missing values (left right). TRUE row, missing values following non-missing value replaced preceding non-missing value. remove_row logical vector length 1, denoting row row_number removed resulting data.frame. remove_rows_above logical vector length 1, denoting rows row_number - , 1:(row_number-1) - removed resulting data.frame, case row_number != 1. sep character vector length 1 separate values case multiple rows input row_number.","code":""},{"path":"https://matanhakim.github.io/il.cbs.muni/reference/row_to_names_fill.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Elevate rows to be the column names of a data.frame and fill row-wise if needed — row_to_names_fill","text":"","code":"df <- data.frame(   a = 1:6,   b = rep(c(\"x\", NA), 3),   c = letters[1:6] )  df #>   a    b c #> 1 1    x a #> 2 2 <NA> b #> 3 3    x c #> 4 4 <NA> d #> 5 5    x e #> 6 6 <NA> f  row_to_names_fill(df, 2:3) #>   2_3  2_x b_c #> 1   4 <NA>   d #> 2   5    x   e #> 3   6 <NA>   f row_to_names_fill(df, 2:3, sep = \".\") #>   2.3  2.x b.c #> 1   4 <NA>   d #> 2   5    x   e #> 3   6 <NA>   f row_to_names_fill(df, 2:4, fill_missing = c(TRUE, FALSE, FALSE)) #>   2_3_4  2_x b_c_d #> 1     5    x     e #> 2     6 <NA>     f"}]
